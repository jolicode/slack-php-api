--- resources/slack-openapi-sorted.json	2020-12-28 10:01:25.748286602 +0100
+++ resources/slack-openapi-patched.json	2020-12-28 11:16:51.785253670 +0100
@@ -397,21 +397,24 @@
                     },
                     "type": "array"
                 },
                 "reactions": {
                     "items": {
                         "$ref": "#/definitions/objs_reaction"
                     },
                     "type": "array"
                 },
                 "timestamp": {
-                    "type": "integer"
+                    "type": [
+                        "integer",
+                        "string"
+                    ]
                 },
                 "user": {
                     "$ref": "#/definitions/defs_user_id"
                 }
             },
             "required": [
                 "comment",
                 "created",
                 "id",
                 "is_intro",
@@ -507,20 +510,21 @@
                     "type": "boolean"
                 },
                 "is_member": {
                     "type": "boolean"
                 },
                 "is_moved": {
                     "type": "integer"
                 },
                 "is_mpim": {
                     "enum": [
+                        false,
                         true
                     ],
                     "type": "boolean"
                 },
                 "is_non_threadable": {
                     "type": "boolean"
                 },
                 "is_open": {
                     "type": "boolean"
                 },
@@ -822,20 +826,24 @@
                 },
                 "comments_count": {
                     "type": "integer"
                 },
                 "created": {
                     "type": "integer"
                 },
                 "date_delete": {
                     "type": "integer"
                 },
+                "deanimate_gif": {
+                    "format": "uri",
+                    "type": "string"
+                },
                 "display_as_bot": {
                     "type": "boolean"
                 },
                 "editable": {
                     "type": "boolean"
                 },
                 "editor": {
                     "$ref": "#/definitions/defs_user_id"
                 },
                 "external_id": {
@@ -920,43 +928,67 @@
                 },
                 "pinned_info": {
                     "$ref": "#/definitions/defs_pinned_info"
                 },
                 "pinned_to": {
                     "items": {
                         "$ref": "#/definitions/defs_channel"
                     },
                     "type": "array"
                 },
+                "pjpeg": {
+                    "format": "uri",
+                    "type": "string"
+                },
                 "pretty_type": {
                     "type": "string"
                 },
                 "preview": {
                     "type": "string"
                 },
                 "public_url_shared": {
                     "type": "boolean"
                 },
                 "reactions": {
                     "items": {
                         "$ref": "#/definitions/objs_reaction"
                     },
                     "type": "array"
                 },
                 "shares": {
                     "additionalProperties": false,
                     "properties": {
                         "private": {
-                            "additionalProperties": false
+                            "additionalProperties": false,
+                            "patternProperties": {
+                                "^[CGD][A-Z0-9]{8,}$": {
+                                    "items": {
+                                        "additionalProperties": true,
+                                        "type": "object"
+                                    },
+                                    "type": "array"
+                                }
+                            },
+                            "type": "object"
                         },
                         "public": {
-                            "additionalProperties": false
+                            "additionalProperties": false,
+                            "patternProperties": {
+                                "^[CGD][A-Z0-9]{8,}$": {
+                                    "items": {
+                                        "additionalProperties": true,
+                                        "type": "object"
+                                    },
+                                    "type": "array"
+                                }
+                            },
+                            "type": "object"
                         }
                     },
                     "type": "object"
                 },
                 "size": {
                     "type": "integer"
                 },
                 "source_team": {
                     "$ref": "#/definitions/defs_team"
                 },
@@ -974,20 +1006,24 @@
                     "type": "integer"
                 },
                 "thumb_160": {
                     "format": "uri",
                     "type": "string"
                 },
                 "thumb_360": {
                     "format": "uri",
                     "type": "string"
                 },
+                "thumb_360_gif": {
+                    "format": "uri",
+                    "type": "string"
+                },
                 "thumb_360_h": {
                     "type": "integer"
                 },
                 "thumb_360_w": {
                     "type": "integer"
                 },
                 "thumb_480": {
                     "format": "uri",
                     "type": "string"
                 },
@@ -1032,21 +1068,24 @@
                 "thumb_960_h": {
                     "type": "integer"
                 },
                 "thumb_960_w": {
                     "type": "integer"
                 },
                 "thumb_tiny": {
                     "type": "string"
                 },
                 "timestamp": {
-                    "type": "integer"
+                    "type": [
+                        "integer",
+                        "string"
+                    ]
                 },
                 "title": {
                     "type": "string"
                 },
                 "updated": {
                     "type": "integer"
                 },
                 "url_private": {
                     "format": "uri",
                     "type": "string"
@@ -1095,39 +1134,124 @@
                     "type": "boolean"
                 }
             },
             "type": "object"
         },
         "objs_message": {
             "additionalProperties": false,
             "properties": {
                 "attachments": {
                     "items": {
-                        "additionalProperties": false,
+                        "additionalProperties": true,
                         "properties": {
+                            "actions": {
+                                "items": {
+                                    "properties": {
+                                        "id": {
+                                            "type": "string"
+                                        },
+                                        "name": {
+                                            "type": "string"
+                                        },
+                                        "style": {
+                                            "type": "string"
+                                        },
+                                        "text": {
+                                            "type": "string"
+                                        },
+                                        "type": {
+                                            "type": "string"
+                                        },
+                                        "value": {
+                                            "type": "string"
+                                        }
+                                    },
+                                    "type": "object"
+                                },
+                                "type": "array"
+                            },
+                            "author_icon": {
+                                "type": "string"
+                            },
+                            "author_link": {
+                                "type": "string"
+                            },
+                            "author_name": {
+                                "type": "string"
+                            },
+                            "callback_id": {
+                                "type": "string"
+                            },
+                            "color": {
+                                "type": "string"
+                            },
                             "fallback": {
                                 "type": "string"
                             },
+                            "fields": {
+                                "items": {
+                                    "properties": {
+                                        "short": {
+                                            "type": "boolean"
+                                        },
+                                        "title": {
+                                            "type": "string"
+                                        },
+                                        "value": {
+                                            "type": "string"
+                                        }
+                                    },
+                                    "type": "object"
+                                },
+                                "type": "array"
+                            },
+                            "footer": {
+                                "type": "string"
+                            },
+                            "footer_icon": {
+                                "type": "string"
+                            },
                             "id": {
                                 "type": "integer"
                             },
                             "image_bytes": {
                                 "type": "integer"
                             },
                             "image_height": {
                                 "type": "integer"
                             },
                             "image_url": {
                                 "type": "string"
                             },
                             "image_width": {
                                 "type": "integer"
+                            },
+                            "pretext": {
+                                "type": "string"
+                            },
+                            "text": {
+                                "type": "string"
+                            },
+                            "thumb_url": {
+                                "type": "string"
+                            },
+                            "title": {
+                                "type": "string"
+                            },
+                            "title_link": {
+                                "type": "string"
+                            },
+                            "ts": {
+                                "type": [
+                                    "number",
+                                    "string"
+                                ]
                             }
                         },
                         "required": [
                             "id"
                         ],
                         "type": "object"
                     },
                     "minItems": 1,
                     "type": "array",
                     "uniqueItems": true
@@ -1431,91 +1555,46 @@
                     "type": "boolean"
                 }
             },
             "required": [
                 "ids"
             ],
             "title": "resources in info from apps.permissions.info",
             "type": "object"
         },
         "objs_response_metadata": {
-            "items": [
-                {
-                    "additionalProperties": false,
-                    "properties": {
-                        "next_cursor": {
-                            "type": "string"
-                        }
+            "additionalProperties": false,
+            "properties": {
+                "messages": {
+                    "items": {
+                        "type": "string"
                     },
-                    "required": [
-                        "next_cursor"
-                    ],
-                    "title": "new paging style",
-                    "type": "object"
+                    "type": "array"
                 },
-                {
-                    "additionalProperties": false,
-                    "properties": {
-                        "messages": {
-                            "items": {
-                                "type": "string"
-                            },
-                            "type": "array"
-                        },
-                        "warnings": {
-                            "items": {
-                                "enum": [
-                                    "method_deprecated"
-                                ],
-                                "type": "string"
-                            },
-                            "type": "array"
-                        }
-                    },
-                    "required": [
-                        "messages",
-                        "warnings"
-                    ],
-                    "title": "deprecation_warning",
-                    "type": "object"
+                "next_cursor": {
+                    "type": "string"
                 },
-                {
-                    "additionalProperties": false,
-                    "properties": {
-                        "messages": {
-                            "items": {
-                                "type": "string"
-                            },
-                            "type": "array"
-                        },
-                        "next_cursor": {
-                            "type": "string"
-                        },
-                        "warnings": {
-                            "items": {
-                                "enum": [
-                                    "method_deprecated"
-                                ],
-                                "type": "string"
-                            },
-                            "type": "array"
-                        }
+                "warnings": {
+                    "items": {
+                        "enum": [
+                            "method_deprecated"
+                        ],
+                        "type": "string"
                     },
-                    "required": [
-                        "messages",
-                        "next_cursor",
-                        "warnings"
-                    ],
-                    "title": "deprecation_warning and paging style together",
-                    "type": "object"
+                    "type": "array"
                 }
-            ]
+            },
+            "required": [
+                "next_cursor"
+            ],
+            "title": "new paging style",
+            "type": "object"
         },
         "objs_scopes": {
             "items": {
                 "title": "Named OAuth scopes",
                 "type": "string",
                 "x-examples": [
                     "chat:write",
                     "im:history",
                     "im:read"
                 ]
@@ -1671,28 +1750,21 @@
                 "deleted": {
                     "type": "boolean"
                 },
                 "description": {
                     "type": [
                         "null",
                         "string"
                     ]
                 },
                 "discoverable": {
-                    "items": [
-                        {
-                            "type": "null"
-                        },
-                        {
-                            "type": "string"
-                        }
-                    ]
+                    "type": "string"
                 },
                 "domain": {
                     "type": "string"
                 },
                 "email_domain": {
                     "type": "string"
                 },
                 "enterprise_id": {
                     "$ref": "#/definitions/defs_enterprise_id"
                 },
@@ -1798,28 +1870,21 @@
                     "pattern": "^X[a-zA-Z0-9]{9,}$",
                     "type": "string"
                 },
                 "is_hidden": {
                     "type": "boolean"
                 },
                 "label": {
                     "type": "string"
                 },
                 "options": {
-                    "items": [
-                        {
-                            "type": "null"
-                        },
-                        {
-                            "$ref": "#/definitions/objs_team_profile_field_option"
-                        }
-                    ]
+                    "$ref": "#/definitions/objs_team_profile_field_option"
                 },
                 "ordering": {
                     "type": "number"
                 },
                 "possible_values": {
                     "items": {
                         "type": "string"
                     },
                     "type": [
                         "array",
@@ -2332,36 +2397,35 @@
                     },
                     {
                         "in": "formData",
                         "name": "team_id",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.apps:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
                             "additionalProperties": true,
                             "description": "This method either only returns a brief _OK_ response or a verbose schema is not available for this method.",
                             "properties": {
                                 "ok": {
-                                    "$ref": "#/definitions/defs_ok_true"
+                                    "$ref": "#/definitions/defs_ok_false"
                                 }
                             },
                             "required": [
                                 "ok"
                             ],
                             "title": "Default success template",
                             "type": "object"
                         }
                     },
                     "default": {
@@ -2426,21 +2490,20 @@
                     },
                     {
                         "in": "query",
                         "name": "team_id",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.apps:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -2515,21 +2578,20 @@
                     },
                     {
                         "in": "query",
                         "name": "team_id",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.apps:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -2605,21 +2667,20 @@
                     },
                     {
                         "in": "formData",
                         "name": "team_id",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.apps:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -2699,21 +2760,20 @@
                     },
                     {
                         "in": "query",
                         "name": "team_id",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.apps:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -2779,21 +2839,20 @@
                         "description": "The channel to archive.",
                         "in": "formData",
                         "name": "channel_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.conversations:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -2873,21 +2932,20 @@
                         "description": "The channel to convert to private.",
                         "in": "formData",
                         "name": "channel_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.conversations:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -2993,21 +3051,20 @@
                     {
                         "description": "The workspace to create the channel in. Note: this argument is required unless you set `org_wide=true`.",
                         "in": "formData",
                         "name": "team_id",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.conversations:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -3090,21 +3147,20 @@
                         "description": "The channel to delete.",
                         "in": "formData",
                         "name": "channel_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.conversations:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -3190,21 +3246,20 @@
                     {
                         "description": "The team to be removed from the channel. Currently only a single team id can be specified.",
                         "in": "formData",
                         "name": "leaving_team_ids",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.conversations:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -3305,21 +3360,20 @@
                     {
                         "description": "A comma-separated list of the workspaces to which the channels you would like returned belong.",
                         "in": "query",
                         "name": "team_ids",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.conversations:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -3385,21 +3439,20 @@
                         "description": "The channel to get preferences for.",
                         "in": "query",
                         "name": "channel_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.conversations:read`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -3530,21 +3583,20 @@
                     {
                         "description": "The maximum number of items to return. Must be between 1 - 1000 both inclusive.",
                         "in": "query",
                         "name": "limit",
                         "type": "integer"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.conversations:read`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -3643,21 +3695,20 @@
                         "description": "The channel that the users will be invited to.",
                         "in": "formData",
                         "name": "channel_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.conversations:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "The users to invite.",
                         "in": "formData",
                         "name": "user_ids",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -3749,21 +3800,20 @@
                     {
                         "in": "formData",
                         "name": "name",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.conversations:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -3854,21 +3904,20 @@
                     {
                         "description": "The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization.",
                         "in": "formData",
                         "name": "team_id",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.conversations:write`",
                         "in": "formData",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -3938,21 +3987,20 @@
                     {
                         "description": "The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization.",
                         "in": "query",
                         "name": "team_id",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.conversations:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -4031,21 +4079,20 @@
                         "description": "The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization.",
                         "in": "formData",
                         "name": "team_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.conversations:write`",
                         "in": "formData",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -4146,21 +4193,20 @@
                     {
                         "description": "Comma separated string of team IDs, signifying the workspaces to search through.",
                         "in": "query",
                         "name": "team_ids",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.conversations:read`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -4256,21 +4302,20 @@
                         "description": "The prefs for this channel in a stringified JSON format.",
                         "in": "formData",
                         "name": "prefs",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.conversations:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -4368,21 +4413,20 @@
                     {
                         "description": "The workspace to which the channel belongs. Omit this argument if the channel is a cross-workspace shared channel.",
                         "in": "formData",
                         "name": "team_id",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.conversations:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -4448,21 +4492,20 @@
                         "description": "The channel to unarchive.",
                         "in": "formData",
                         "name": "channel_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.conversations:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -4541,21 +4584,20 @@
                         "description": "The name of the emoji to be removed. Colons (`:myemoji:`) around the value are not required, although they may be included.",
                         "in": "formData",
                         "name": "name",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.teams:write`",
                         "in": "formData",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "The URL of a file to use as an image for the emoji. Square images under 128KB and with transparent backgrounds work best.",
                         "in": "formData",
                         "name": "url",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -4634,21 +4676,20 @@
                         "description": "The name of the emoji to be aliased. Colons (`:myemoji:`) around the value are not required, although they may be included.",
                         "in": "formData",
                         "name": "name",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.teams:write`",
                         "in": "formData",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -4718,21 +4759,20 @@
                     {
                         "description": "The maximum number of items to return. Must be between 1 - 1000 both inclusive.",
                         "in": "query",
                         "name": "limit",
                         "type": "integer"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.teams:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -4797,21 +4837,20 @@
                         "description": "The name of the emoji to be removed. Colons (`:myemoji:`) around the value are not required, although they may be included.",
                         "in": "formData",
                         "name": "name",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.teams:write`",
                         "in": "formData",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -4883,21 +4922,20 @@
                         "description": "The new name of the emoji.",
                         "in": "formData",
                         "name": "new_name",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.teams:write`",
                         "in": "formData",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -4969,21 +5007,20 @@
                     {
                         "description": "ID for the workspace where the invite request was made.",
                         "in": "formData",
                         "name": "team_id",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.invites:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -5060,21 +5097,20 @@
                     {
                         "description": "ID for the workspace where the invite requests were made.",
                         "in": "query",
                         "name": "team_id",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.invites:read`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -5151,21 +5187,20 @@
                     {
                         "description": "ID for the workspace where the invite requests were made.",
                         "in": "query",
                         "name": "team_id",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.invites:read`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -5237,21 +5272,20 @@
                     {
                         "description": "ID for the workspace where the invite request was made.",
                         "in": "formData",
                         "name": "team_id",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.invites:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -5328,21 +5362,20 @@
                     {
                         "description": "ID for the workspace where the invite requests were made.",
                         "in": "query",
                         "name": "team_id",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.invites:read`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -5418,21 +5451,20 @@
                     {
                         "in": "query",
                         "name": "team_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.teams:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -5517,21 +5549,20 @@
                         "description": "Team name (for example, Slack Softball Team).",
                         "in": "formData",
                         "name": "team_name",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.teams:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -5602,21 +5633,20 @@
                     {
                         "description": "The maximum number of items to return. Must be between 1 - 100 both inclusive.",
                         "in": "query",
                         "name": "limit",
                         "type": "integer"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.teams:read`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -5692,21 +5722,20 @@
                     {
                         "in": "query",
                         "name": "team_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.teams:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -5771,21 +5800,20 @@
                     {
                         "in": "query",
                         "name": "team_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.teams:read`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -5857,21 +5885,20 @@
                         "description": "ID for the workspace to set the default channel for.",
                         "in": "formData",
                         "name": "team_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.teams:write`",
                         "in": "formData",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -5944,21 +5971,20 @@
                         "description": "ID for the workspace to set the description for.",
                         "in": "formData",
                         "name": "team_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.teams:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -6031,21 +6057,20 @@
                         "description": "The ID of the workspace to set discoverability on.",
                         "in": "formData",
                         "name": "team_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.teams:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -6117,21 +6142,20 @@
                         "description": "ID for the workspace to set the icon for.",
                         "in": "formData",
                         "name": "team_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.teams:write`",
                         "in": "formData",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -6204,21 +6228,20 @@
                         "description": "ID for the workspace to set the name for.",
                         "in": "formData",
                         "name": "team_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.teams:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -6290,21 +6313,20 @@
                     {
                         "description": "The workspace to add default channels in.",
                         "in": "formData",
                         "name": "team_id",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.usergroups:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "ID of the IDP group to add default channels for.",
                         "in": "formData",
                         "name": "usergroup_id",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -6383,21 +6405,20 @@
                         "description": "A comma separated list of encoded team (workspace) IDs. Each workspace *MUST* belong to the organization associated with the token.",
                         "in": "formData",
                         "name": "team_ids",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.teams:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "An encoded usergroup (IDP Group) ID.",
                         "in": "formData",
                         "name": "usergroup_id",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -6475,21 +6496,20 @@
                     {
                         "description": "ID of the the workspace.",
                         "in": "query",
                         "name": "team_id",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.usergroups:read`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "ID of the IDP group to list default channels for.",
                         "in": "query",
                         "name": "usergroup_id",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -6562,21 +6582,20 @@
                         "description": "Comma-separated string of channel IDs",
                         "in": "formData",
                         "name": "channel_ids",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.usergroups:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "ID of the IDP Group",
                         "in": "formData",
                         "name": "usergroup_id",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -6667,21 +6686,20 @@
                         "description": "The ID (`T1234`) of the workspace.",
                         "in": "formData",
                         "name": "team_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.users:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "The ID of the user to add to the workspace.",
                         "in": "formData",
                         "name": "user_id",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -6804,21 +6822,20 @@
                         "description": "The ID (`T1234`) of the workspace.",
                         "in": "formData",
                         "name": "team_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.users:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -6896,21 +6913,20 @@
                         "description": "The ID (`T1234`) of the workspace.",
                         "in": "query",
                         "name": "team_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.users:read`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -6976,21 +6992,20 @@
                         "description": "The ID (`T1234`) of the workspace.",
                         "in": "formData",
                         "name": "team_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.users:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "The ID of the user to remove.",
                         "in": "formData",
                         "name": "user_id",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -7069,21 +7084,20 @@
                         "description": "ID of the team that the session belongs to",
                         "in": "formData",
                         "name": "team_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.users:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -7148,21 +7162,20 @@
                     {
                         "description": "Only expire mobile sessions (default: false)",
                         "in": "formData",
                         "name": "mobile_only",
                         "type": "boolean"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.users:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "The ID of the user to wipe sessions for",
                         "in": "formData",
                         "name": "user_id",
                         "required": true,
                         "type": "string"
                     },
                     {
@@ -7241,21 +7254,20 @@
                         "description": "The ID (`T1234`) of the workspace.",
                         "in": "formData",
                         "name": "team_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.users:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "The ID of the user to designate as an admin.",
                         "in": "formData",
                         "name": "user_id",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -7335,21 +7347,20 @@
                         "description": "The ID (`T1234`) of the workspace.",
                         "in": "formData",
                         "name": "team_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.users:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "The ID of the user to set an expiration for.",
                         "in": "formData",
                         "name": "user_id",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -7422,21 +7433,20 @@
                         "description": "The ID (`T1234`) of the workspace.",
                         "in": "formData",
                         "name": "team_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.users:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Id of the user to promote to owner.",
                         "in": "formData",
                         "name": "user_id",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -7509,21 +7519,20 @@
                         "description": "The ID (`T1234`) of the workspace.",
                         "in": "formData",
                         "name": "team_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin.users:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "The ID of the user to designate as a regular user.",
                         "in": "formData",
                         "name": "user_id",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -7610,39 +7619,45 @@
                 ],
                 "responses": {
                     "200": {
                         "description": "Standard success response",
                         "schema": {
                             "additionalProperties": {
                                 "type": "object"
                             },
                             "description": "Schema for successful response api.test method",
                             "properties": {
+                                "args": {
+                                    "type": "object"
+                                },
                                 "ok": {
                                     "$ref": "#/definitions/defs_ok_true"
                                 }
                             },
                             "required": [
                                 "ok"
                             ],
                             "title": "api.test success schema",
                             "type": "object"
                         }
                     },
                     "default": {
                         "description": "Artificial error response",
                         "schema": {
                             "additionalProperties": {
                                 "type": "object"
                             },
                             "description": "Schema for error response api.test method",
                             "properties": {
+                                "args": {
+                                    "type": "object"
+                                },
                                 "error": {
                                     "type": "string"
                                 },
                                 "ok": {
                                     "$ref": "#/definitions/defs_ok_false"
                                 }
                             },
                             "required": [
                                 "error",
                                 "ok"
@@ -7690,21 +7705,20 @@
                     },
                     {
                         "in": "query",
                         "name": "limit",
                         "type": "integer"
                     },
                     {
                         "description": "Authentication token. Requires scope: `authorizations:read`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -7953,21 +7967,20 @@
                         "description": "A comma separated list of scopes to request for",
                         "in": "query",
                         "name": "scopes",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `none`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Token used to trigger the permissions API",
                         "in": "query",
                         "name": "trigger_id",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -8077,21 +8090,20 @@
                     {
                         "description": "The maximum number of items to return.",
                         "in": "query",
                         "name": "limit",
                         "type": "integer"
                     },
                     {
                         "description": "Authentication token. Requires scope: `none`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical successful paginated response",
                         "schema": {
@@ -8220,21 +8232,20 @@
                 "externalDocs": {
                     "description": "API method documentation",
                     "url": "https://api.slack.com/methods/apps.permissions.scopes.list"
                 },
                 "operationId": "apps_permissions_scopes_list",
                 "parameters": [
                     {
                         "description": "Authentication token. Requires scope: `none`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical successful paginated response",
                         "schema": {
@@ -8361,21 +8372,20 @@
                     {
                         "description": "The maximum number of items to return.",
                         "in": "query",
                         "name": "limit",
                         "type": "integer"
                     },
                     {
                         "description": "Authentication token. Requires scope: `none`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical successful paginated response",
                         "schema": {
@@ -8440,21 +8450,20 @@
                         "description": "A comma separated list of user scopes to request for",
                         "in": "query",
                         "name": "scopes",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `none`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Token used to trigger the request",
                         "in": "query",
                         "name": "trigger_id",
                         "required": true,
                         "type": "string"
                     },
                     {
@@ -8646,21 +8655,20 @@
                     {
                         "description": "Setting this parameter to `1` triggers a _testing mode_ where the specified token will not actually be revoked.",
                         "in": "query",
                         "name": "test",
                         "type": "boolean"
                     },
                     {
                         "description": "Authentication token. Requires scope: `none`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -8750,21 +8758,20 @@
                 "externalDocs": {
                     "description": "API method documentation",
                     "url": "https://api.slack.com/methods/auth.test"
                 },
                 "operationId": "auth_test",
                 "parameters": [
                     {
                         "description": "Authentication token. Requires scope: `none`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Standard success response when used with a user token",
                         "schema": {
@@ -8877,21 +8884,20 @@
                     {
                         "description": "Bot user to get info on",
                         "in": "query",
                         "name": "bot",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `users:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "When successful, returns bot info by bot ID.",
                         "schema": {
@@ -9078,21 +9084,20 @@
                     {
                         "description": "The name of the Call.",
                         "in": "formData",
                         "name": "title",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `calls:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "The list of users to register as participants in the Call. [Read more on how to specify users here](/apis/calls#users).",
                         "in": "formData",
                         "name": "users",
                         "type": "string"
                     }
                 ],
                 "produces": [
@@ -9169,21 +9174,20 @@
                         "description": "`id` returned when registering the call using the [`calls.add`](/methods/calls.add) method.",
                         "in": "formData",
                         "name": "id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `calls:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -9248,21 +9252,20 @@
                         "description": "`id` of the Call returned by the [`calls.add`](/methods/calls.add) method.",
                         "in": "query",
                         "name": "id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `calls:read`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -9327,21 +9330,20 @@
                         "description": "`id` returned by the [`calls.add`](/methods/calls.add) method.",
                         "in": "formData",
                         "name": "id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `calls:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "The list of users to add as participants in the Call. [Read more on how to specify users here](/apis/calls#users).",
                         "in": "formData",
                         "name": "users",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -9414,21 +9416,20 @@
                         "description": "`id` returned by the [`calls.add`](/methods/calls.add) method.",
                         "in": "formData",
                         "name": "id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `calls:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "The list of users to remove as participants in the Call. [Read more on how to specify users here](/apis/calls#users).",
                         "in": "formData",
                         "name": "users",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -9519,21 +9520,20 @@
                     {
                         "description": "The name of the Call.",
                         "in": "formData",
                         "name": "title",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `calls:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -9609,21 +9609,21 @@
                     {
                         "description": "Authentication token. Requires scope: `chat:write`",
                         "in": "header",
                         "name": "token",
                         "type": "string"
                     },
                     {
                         "description": "Timestamp of the message to be deleted.",
                         "in": "formData",
                         "name": "ts",
-                        "type": "number"
+                        "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
                             "additionalProperties": false,
@@ -9740,21 +9740,20 @@
                         "description": "`scheduled_message_id` returned from call to chat.scheduleMessage",
                         "in": "formData",
                         "name": "scheduled_message_id",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `chat:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -9859,21 +9858,20 @@
                         "description": "A message's `ts` value, uniquely identifying it within a channel",
                         "in": "query",
                         "name": "message_ts",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `none`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Standard success response",
                         "schema": {
@@ -10155,21 +10153,20 @@
                     {
                         "description": "Provide another message's `ts` value to post this message in a thread. Avoid using a reply's `ts` value; use its parent's value instead. Ephemeral messages in threads are only shown if there is already an active thread.",
                         "in": "formData",
                         "name": "thread_ts",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `chat:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "`id` of the user who will receive the ephemeral message. The user should be in the channel specified by the `channel` argument.",
                         "in": "formData",
                         "name": "user",
                         "required": true,
                         "type": "string"
                     },
                     {
@@ -10280,21 +10277,21 @@
                 "externalDocs": {
                     "description": "API method documentation",
                     "url": "https://api.slack.com/methods/chat.postMessage"
                 },
                 "operationId": "chat_postMessage",
                 "parameters": [
                     {
                         "description": "Pass true to post the message as the authed user, instead of as a bot. Defaults to false. See [authorship](#authorship) below.",
                         "in": "formData",
                         "name": "as_user",
-                        "type": "string"
+                        "type": "boolean"
                     },
                     {
                         "description": "A JSON-based array of structured attachments, presented as a URL-encoded string.",
                         "in": "formData",
                         "name": "attachments",
                         "type": "string"
                     },
                     {
                         "description": "A JSON-based array of structured blocks, presented as a URL-encoded string.",
                         "in": "formData",
@@ -10353,21 +10350,20 @@
                     {
                         "description": "Provide another message's `ts` value to make this message a reply. Avoid using a reply's `ts` value; use its parent instead.",
                         "in": "formData",
                         "name": "thread_ts",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `chat:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Pass true to enable unfurling of primarily text-based content.",
                         "in": "formData",
                         "name": "unfurl_links",
                         "type": "boolean"
                     },
                     {
                         "description": "Pass false to disable unfurling of media content.",
@@ -10518,39 +10514,39 @@
                     {
                         "description": "Change how messages are treated. Defaults to `none`. See [chat.postMessage](chat.postMessage#formatting).",
                         "in": "formData",
                         "name": "parse",
                         "type": "string"
                     },
                     {
                         "description": "Unix EPOCH timestamp of time in future to send the message.",
                         "in": "formData",
                         "name": "post_at",
-                        "type": "string"
+                        "type": "integer"
                     },
                     {
                         "description": "Used in conjunction with `thread_ts` and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to `false`.",
                         "in": "formData",
                         "name": "reply_broadcast",
                         "type": "boolean"
                     },
                     {
                         "description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail.",
                         "in": "formData",
                         "name": "text",
                         "type": "string"
                     },
                     {
                         "description": "Provide another message's `ts` value to make this message a reply. Avoid using a reply's `ts` value; use its parent instead.",
                         "in": "formData",
                         "name": "thread_ts",
-                        "type": "number"
+                        "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `chat:write`",
                         "in": "header",
                         "name": "token",
                         "type": "string"
                     },
                     {
                         "description": "Pass true to enable unfurling of primarily text-based content.",
                         "in": "formData",
@@ -10573,26 +10569,46 @@
                         "schema": {
                             "additionalProperties": false,
                             "description": "Schema for successful response of chat.scheduleMessage method",
                             "properties": {
                                 "channel": {
                                     "$ref": "#/definitions/defs_channel"
                                 },
                                 "message": {
                                     "additionalProperties": false,
                                     "properties": {
+                                        "attachments": {
+                                            "items": {
+                                                "properties": {
+                                                    "fallback": {
+                                                        "type": "string"
+                                                    },
+                                                    "id": {
+                                                        "type": "integer"
+                                                    },
+                                                    "text": {
+                                                        "type": "string"
+                                                    }
+                                                },
+                                                "type": "object"
+                                            },
+                                            "type": "array"
+                                        },
                                         "bot_id": {
                                             "$ref": "#/definitions/defs_bot_id"
                                         },
                                         "bot_profile": {
                                             "$ref": "#/definitions/objs_bot_profile"
                                         },
+                                        "subtype": {
+                                            "type": "string"
+                                        },
                                         "team": {
                                             "$ref": "#/definitions/defs_team"
                                         },
                                         "text": {
                                             "type": "string"
                                         },
                                         "type": {
                                             "type": "string"
                                         },
                                         "user": {
@@ -10608,22 +10624,24 @@
                                         "text",
                                         "type",
                                         "user"
                                     ],
                                     "type": "object"
                                 },
                                 "ok": {
                                     "$ref": "#/definitions/defs_ok_true"
                                 },
                                 "post_at": {
-                                    "pattern": "^\\d{10}$",
-                                    "type": "integer"
+                                    "type": [
+                                        "integer",
+                                        "string"
+                                    ]
                                 },
                                 "scheduled_message_id": {
                                     "pattern": "^[Q][A-Z0-9]{8,}$",
                                     "title": "Scheduled Message ID",
                                     "type": "string"
                                 }
                             },
                             "required": [
                                 "channel",
                                 "message",
@@ -10732,33 +10750,33 @@
                     {
                         "description": "For pagination purposes, this is the `cursor` value returned from a previous call to `chat.scheduledmessages.list` indicating where you want to start this call from.",
                         "in": "query",
                         "name": "cursor",
                         "type": "string"
                     },
                     {
                         "description": "A UNIX timestamp of the latest value in the time range",
                         "in": "query",
                         "name": "latest",
-                        "type": "number"
+                        "type": "string"
                     },
                     {
                         "description": "Maximum number of original entries to return.",
                         "in": "query",
                         "name": "limit",
                         "type": "integer"
                     },
                     {
                         "description": "A UNIX timestamp of the oldest value in the time range",
                         "in": "query",
                         "name": "oldest",
-                        "type": "number"
+                        "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `none`",
                         "in": "header",
                         "name": "token",
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
@@ -10791,25 +10809,27 @@
                                         "properties": {
                                             "channel_id": {
                                                 "$ref": "#/definitions/defs_channel_id"
                                             },
                                             "date_created": {
                                                 "pattern": "^\\d{10}$",
                                                 "type": "integer"
                                             },
                                             "id": {
                                                 "pattern": "^[Q][A-Z0-9]{8,}$",
-                                                "type": "string"
+                                                "type": "integer"
                                             },
                                             "post_at": {
-                                                "pattern": "^\\d{10}$",
-                                                "type": "integer"
+                                                "type": [
+                                                    "integer",
+                                                    "string"
+                                                ]
                                             },
                                             "text": {
                                                 "type": "string"
                                             }
                                         },
                                         "required": [
                                             "channel_id",
                                             "date_created",
                                             "id",
                                             "post_at"
@@ -10907,21 +10927,20 @@
                         "description": "Channel ID of the message",
                         "in": "formData",
                         "name": "channel",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `links:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Timestamp of the message to add unfurl behavior to.",
                         "in": "formData",
                         "name": "ts",
                         "required": true,
                         "type": "string"
                     },
                     {
@@ -11043,21 +11062,21 @@
                 "externalDocs": {
                     "description": "API method documentation",
                     "url": "https://api.slack.com/methods/chat.update"
                 },
                 "operationId": "chat_update",
                 "parameters": [
                     {
                         "description": "Pass true to update the message as the authed user. [Bot users](/bot-users) in this context are considered authed users.",
                         "in": "formData",
                         "name": "as_user",
-                        "type": "string"
+                        "type": "boolean"
                     },
                     {
                         "description": "A JSON-based array of structured attachments, presented as a URL-encoded string. This field is required when not presenting `text`. If you don't include this field, the message's previous `attachments` will be retained. To remove previous `attachments`, include an empty array for this field.",
                         "in": "formData",
                         "name": "attachments",
                         "type": "string"
                     },
                     {
                         "description": "A JSON-based array of [structured blocks](/block-kit/building), presented as a URL-encoded string. If you don't include this field, the message's previous `blocks` will be retained. To remove previous `blocks`, include an empty array for this field.",
                         "in": "formData",
@@ -11086,21 +11105,20 @@
                     {
                         "description": "New text for the message, using the [default formatting rules](/reference/surfaces/formatting). It's not required when presenting `blocks` or `attachments`.",
                         "in": "formData",
                         "name": "text",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `chat:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Timestamp of the message to be updated.",
                         "in": "formData",
                         "name": "ts",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -11689,20 +11707,32 @@
                                     },
                                     "minItems": 1,
                                     "type": "array",
                                     "uniqueItems": true
                                 },
                                 "ok": {
                                     "$ref": "#/definitions/defs_ok_true"
                                 },
                                 "pin_count": {
                                     "type": "integer"
+                                },
+                                "response_metadata": {
+                                    "additionalProperties": false,
+                                    "properties": {
+                                        "next_cursor": {
+                                            "type": "string"
+                                        }
+                                    },
+                                    "required": [
+                                        "next_cursor"
+                                    ],
+                                    "type": "object"
                                 }
                             },
                             "required": [
                                 "channel_actions_count",
                                 "channel_actions_ts",
                                 "has_more",
                                 "messages",
                                 "ok",
                                 "pin_count"
                             ],
@@ -12655,21 +12685,21 @@
                     {
                         "description": "Authentication token. Requires scope: `conversations:write`",
                         "in": "header",
                         "name": "token",
                         "type": "string"
                     },
                     {
                         "description": "Unique identifier of message you want marked as most recently seen in this conversation.",
                         "in": "formData",
                         "name": "ts",
-                        "type": "number"
+                        "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
                             "additionalProperties": false,
@@ -13252,21 +13282,21 @@
                     {
                         "description": "Authentication token. Requires scope: `conversations:history`",
                         "in": "query",
                         "name": "token",
                         "type": "string"
                     },
                     {
                         "description": "Unique identifier of a thread's parent message. `ts` must be the timestamp of an existing message with 0 or more replies. If there are no replies then just the single message referenced by `ts` will return - it is just an ordinary, unthreaded message.",
                         "in": "query",
                         "name": "ts",
-                        "type": "number"
+                        "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
                             "additionalProperties": false,
@@ -13391,20 +13421,32 @@
                                                     "user"
                                                 ],
                                                 "type": "object"
                                             }
                                         ]
                                     },
                                     "type": "array"
                                 },
                                 "ok": {
                                     "$ref": "#/definitions/defs_ok_true"
+                                },
+                                "response_metadata": {
+                                    "additionalProperties": false,
+                                    "properties": {
+                                        "next_cursor": {
+                                            "type": "string"
+                                        }
+                                    },
+                                    "required": [
+                                        "next_cursor"
+                                    ],
+                                    "type": "object"
                                 }
                             },
                             "required": [
                                 "messages",
                                 "ok"
                             ],
                             "title": "conversations.replies success schema",
                             "type": "object"
                         }
                     },
@@ -13864,21 +13906,20 @@
                         "description": "The dialog definition. This must be a JSON-encoded string.",
                         "in": "query",
                         "name": "dialog",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `none`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Exchange a trigger to post to the user.",
                         "in": "query",
                         "name": "trigger_id",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -13980,21 +14021,20 @@
                 "externalDocs": {
                     "description": "API method documentation",
                     "url": "https://api.slack.com/methods/dnd.endDnd"
                 },
                 "operationId": "dnd_endDnd",
                 "parameters": [
                     {
                         "description": "Authentication token. Requires scope: `dnd:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -14082,21 +14122,20 @@
                 "externalDocs": {
                     "description": "API method documentation",
                     "url": "https://api.slack.com/methods/dnd.endSnooze"
                 },
                 "operationId": "dnd_endSnooze",
                 "parameters": [
                     {
                         "description": "Authentication token. Requires scope: `dnd:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -14333,21 +14372,20 @@
                         "description": "Number of minutes, from now, to snooze until.",
                         "in": "formData",
                         "name": "num_minutes",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `dnd:write`",
                         "in": "formData",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -14481,21 +14519,21 @@
                             "required": [
                                 "ok"
                             ],
                             "title": "Default success template",
                             "type": "object"
                         }
                     },
                     "default": {
                         "description": "Typical error response",
                         "schema": {
-                            "additionalProperties": true,
+                            "additionalProperties": false,
                             "description": "This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.",
                             "properties": {
                                 "ok": {
                                     "$ref": "#/definitions/defs_ok_false"
                                 }
                             },
                             "required": [
                                 "ok"
                             ],
                             "title": "Default error template",
@@ -14524,21 +14562,20 @@
                 "externalDocs": {
                     "description": "API method documentation",
                     "url": "https://api.slack.com/methods/emoji.list"
                 },
                 "operationId": "emoji_list",
                 "parameters": [
                     {
                         "description": "Authentication token. Requires scope: `emoji:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -14984,27 +15021,27 @@
                     {
                         "description": "Authentication token. Requires scope: `files:read`",
                         "in": "query",
                         "name": "token",
                         "type": "string"
                     },
                     {
                         "description": "Filter files created after this timestamp (inclusive).",
                         "in": "query",
                         "name": "ts_from",
-                        "type": "number"
+                        "type": "string"
                     },
                     {
                         "description": "Filter files created before this timestamp (inclusive).",
                         "in": "query",
                         "name": "ts_to",
-                        "type": "number"
+                        "type": "string"
                     },
                     {
                         "description": "Filter files by type ([see below](#file_types)). You can pass multiple values in the types argument, like `types=spaces,snippets`.The default value is `all`, which does not filter the list.",
                         "in": "query",
                         "name": "types",
                         "type": "string"
                     },
                     {
                         "description": "Filter files created by a single user.",
                         "in": "query",
@@ -15901,21 +15938,21 @@
                     }
                 ],
                 "tags": [
                     "files"
                 ]
             }
         },
         "/files.upload": {
             "post": {
                 "consumes": [
-                    "application/x-www-form-urlencoded"
+                    "multipart/form-data"
                 ],
                 "description": "Uploads or creates a file.",
                 "externalDocs": {
                     "description": "API method documentation",
                     "url": "https://api.slack.com/methods/files.upload"
                 },
                 "operationId": "files_upload",
                 "parameters": [
                     {
                         "description": "Comma-separated list of channel names or IDs where the file will be shared.",
@@ -15926,21 +15963,21 @@
                     {
                         "description": "File contents via a POST variable. If omitting this parameter, you must provide a `file`.",
                         "in": "formData",
                         "name": "content",
                         "type": "string"
                     },
                     {
                         "description": "File contents via `multipart/form-data`. If omitting this parameter, you must submit `content`.",
                         "in": "formData",
                         "name": "file",
-                        "type": "string"
+                        "type": "file"
                     },
                     {
                         "description": "Filename of file.",
                         "in": "formData",
                         "name": "filename",
                         "type": "string"
                     },
                     {
                         "description": "A [file type](/types/file#file_types) identifier.",
                         "in": "formData",
@@ -15950,21 +15987,21 @@
                     {
                         "description": "The message text introducing the file in specified `channels`.",
                         "in": "formData",
                         "name": "initial_comment",
                         "type": "string"
                     },
                     {
                         "description": "Provide another message's `ts` value to upload this file as a reply. Never use a reply's `ts` value; use its parent instead.",
                         "in": "formData",
                         "name": "thread_ts",
-                        "type": "number"
+                        "type": "string"
                     },
                     {
                         "description": "Title of file.",
                         "in": "formData",
                         "name": "title",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `files:write:user`",
                         "in": "formData",
@@ -16079,21 +16116,20 @@
                     {
                         "description": "Specify `true` to convert `W` global user IDs to workspace-specific `U` IDs. Defaults to `false`.",
                         "in": "query",
                         "name": "to_old",
                         "type": "boolean"
                     },
                     {
                         "description": "Authentication token. Requires scope: `tokens.basic`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "A comma-separated list of user ids, up to 400 per request",
                         "in": "query",
                         "name": "users",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -16487,34 +16523,32 @@
                 "externalDocs": {
                     "description": "API method documentation",
                     "url": "https://api.slack.com/methods/pins.add"
                 },
                 "operationId": "pins_add",
                 "parameters": [
                     {
                         "description": "Channel to pin the item in.",
                         "in": "formData",
                         "name": "channel",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Timestamp of the message to pin.",
                         "in": "formData",
                         "name": "timestamp",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `pins:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -16604,28 +16638,26 @@
                 "externalDocs": {
                     "description": "API method documentation",
                     "url": "https://api.slack.com/methods/pins.list"
                 },
                 "operationId": "pins_list",
                 "parameters": [
                     {
                         "description": "Channel to get pinned items for.",
                         "in": "query",
                         "name": "channel",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `pins:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -16796,21 +16828,20 @@
                     {
                         "description": "Timestamp of the message to un-pin.",
                         "in": "formData",
                         "name": "timestamp",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `pins:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -16921,21 +16952,20 @@
                         "description": "Timestamp of the message to add reaction to.",
                         "in": "formData",
                         "name": "timestamp",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `reactions:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -17054,33 +17084,32 @@
                     {
                         "description": "Timestamp of the message to get reactions for.",
                         "in": "query",
                         "name": "timestamp",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `reactions:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
                             "description": "Schema for successful response from reactions.get method",
-                            "items": [
+                            "oneOf": [
                                 {
                                     "additionalProperties": false,
                                     "properties": {
                                         "channel": {
                                             "$ref": "#/definitions/defs_channel"
                                         },
                                         "message": {
                                             "$ref": "#/definitions/objs_message"
                                         },
                                         "ok": {
@@ -17142,22 +17171,21 @@
                                         }
                                     },
                                     "required": [
                                         "comment",
                                         "file",
                                         "ok",
                                         "type"
                                     ]
                                 }
                             ],
-                            "title": "reactions.get success schema",
-                            "type": "object"
+                            "title": "reactions.get success schema"
                         }
                     },
                     "default": {
                         "description": "Typical error response",
                         "schema": {
                             "additionalProperties": false,
                             "description": "Schema for error response from reactions.get method",
                             "properties": {
                                 "callstack": {
                                     "description": "Note: PHP callstack is only visible in dev/qa",
@@ -17249,21 +17277,20 @@
                     },
                     {
                         "in": "query",
                         "name": "page",
                         "type": "integer"
                     },
                     {
                         "description": "Authentication token. Requires scope: `reactions:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Show reactions made by this user. Defaults to the authed user.",
                         "in": "query",
                         "name": "user",
                         "type": "string"
                     }
                 ],
                 "produces": [
@@ -17464,21 +17491,20 @@
                     {
                         "description": "Timestamp of the message to remove reaction from.",
                         "in": "formData",
                         "name": "timestamp",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `reactions:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -17583,21 +17609,20 @@
                         "description": "When this reminder should happen: the Unix timestamp (up to five years from now), the number of seconds until the reminder (if within 24 hours), or a natural language description (Ex. \"in 15 minutes,\" or \"every Thursday\")",
                         "in": "formData",
                         "name": "time",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `reminders:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "The user who will receive the reminder. If no user is specified, the reminder will go to user who created it.",
                         "in": "formData",
                         "name": "user",
                         "type": "string"
                     }
                 ],
                 "produces": [
@@ -18143,21 +18168,20 @@
                     {
                         "description": "Only deliver presence events when requested by subscription. See [presence subscriptions](/docs/presence-and-status#subscriptions).",
                         "in": "query",
                         "name": "presence_sub",
                         "type": "boolean"
                     },
                     {
                         "description": "Authentication token. Requires scope: `rtm:stream`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -18320,21 +18344,20 @@
                     {
                         "description": "Change sort direction to ascending (`asc`) or descending (`desc`).",
                         "in": "query",
                         "name": "sort_dir",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `search:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -18416,21 +18439,20 @@
                     {
                         "description": "Timestamp of the message to add star to.",
                         "in": "formData",
                         "name": "timestamp",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `stars:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -18825,21 +18847,20 @@
                     {
                         "description": "Timestamp of the message to remove star from.",
                         "in": "formData",
                         "name": "timestamp",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `stars:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -18947,21 +18968,20 @@
                     },
                     {
                         "in": "query",
                         "name": "page",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "This response demonstrates pagination and two access log entries.",
                         "schema": {
@@ -19119,21 +19139,20 @@
                 "externalDocs": {
                     "description": "API method documentation",
                     "url": "https://api.slack.com/methods/team.billableInfo"
                 },
                 "operationId": "team_billableInfo",
                 "parameters": [
                     {
                         "description": "Authentication token. Requires scope: `admin`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "A user to retrieve the billable information for. Defaults to all users.",
                         "in": "query",
                         "name": "user",
                         "type": "string"
                     }
                 ],
                 "produces": [
@@ -19202,21 +19221,20 @@
                     {
                         "description": "Team to get info on, if omitted, will return information about the current team. Will only return team that the authenticated token is allowed to see through external shared channels",
                         "in": "query",
                         "name": "team",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `team:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -19332,21 +19350,20 @@
                     {
                         "description": "Filter logs to this service. Defaults to all logs.",
                         "in": "query",
                         "name": "service_id",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `admin`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Filter logs generated by this user\u2019s actions. Defaults to all logs.",
                         "in": "query",
                         "name": "user",
                         "type": "string"
                     }
                 ],
                 "produces": [
@@ -19496,21 +19513,20 @@
                 "externalDocs": {
                     "description": "API method documentation",
                     "url": "https://api.slack.com/methods/team.profile.get"
                 },
                 "operationId": "team_profile_get",
                 "parameters": [
                     {
                         "description": "Authentication token. Requires scope: `users.profile:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Filter by visibility.",
                         "in": "query",
                         "name": "visibility",
                         "type": "string"
                     }
                 ],
                 "produces": [
@@ -19649,21 +19665,20 @@
                         "description": "A name for the User Group. Must be unique among User Groups.",
                         "in": "formData",
                         "name": "name",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `usergroups:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -19762,21 +19777,20 @@
                     {
                         "description": "Include the number of users in the User Group.",
                         "in": "formData",
                         "name": "include_count",
                         "type": "boolean"
                     },
                     {
                         "description": "Authentication token. Requires scope: `usergroups:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "The encoded ID of the User Group to disable.",
                         "in": "formData",
                         "name": "usergroup",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -19882,21 +19896,20 @@
                     {
                         "description": "Include the number of users in the User Group.",
                         "in": "formData",
                         "name": "include_count",
                         "type": "boolean"
                     },
                     {
                         "description": "Authentication token. Requires scope: `usergroups:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "The encoded ID of the User Group to enable.",
                         "in": "formData",
                         "name": "usergroup",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -20014,21 +20027,20 @@
                     {
                         "description": "Include the list of users for each User Group.",
                         "in": "query",
                         "name": "include_users",
                         "type": "boolean"
                     },
                     {
                         "description": "Authentication token. Requires scope: `usergroups:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -20155,21 +20167,20 @@
                     {
                         "description": "A name for the User Group. Must be unique among User Groups.",
                         "in": "formData",
                         "name": "name",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `usergroups:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "The encoded ID of the User Group to update.",
                         "in": "formData",
                         "name": "usergroup",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -20276,25 +20287,24 @@
                     {
                         "description": "Allow results that involve disabled User Groups.",
                         "in": "query",
                         "name": "include_disabled",
                         "type": "boolean"
                     },
                     {
                         "description": "Authentication token. Requires scope: `usergroups:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
-                        "description": "The encoded ID of the User Group to update.",
+                        "description": "The encoded ID of the User Group to read.",
                         "in": "query",
                         "name": "usergroup",
                         "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
@@ -20401,21 +20411,20 @@
                     {
                         "description": "Include the number of users in the User Group.",
                         "in": "formData",
                         "name": "include_count",
                         "type": "boolean"
                     },
                     {
                         "description": "Authentication token. Requires scope: `usergroups:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "The encoded ID of the User Group to update.",
                         "in": "formData",
                         "name": "usergroup",
                         "required": true,
                         "type": "string"
                     },
                     {
@@ -20679,21 +20688,20 @@
                 "externalDocs": {
                     "description": "API method documentation",
                     "url": "https://api.slack.com/methods/users.deletePhoto"
                 },
                 "operationId": "users_deletePhoto",
                 "parameters": [
                     {
                         "description": "Authentication token. Requires scope: `users.profile:write`",
                         "in": "formData",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -20779,21 +20787,20 @@
                 "externalDocs": {
                     "description": "API method documentation",
                     "url": "https://api.slack.com/methods/users.getPresence"
                 },
                 "operationId": "users_getPresence",
                 "parameters": [
                     {
                         "description": "Authentication token. Requires scope: `users:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "User to get presence info on. Defaults to the authed user.",
                         "in": "query",
                         "name": "user",
                         "type": "string"
                     }
                 ],
                 "produces": [
@@ -21232,21 +21239,20 @@
                     {
                         "description": "Set this to `true` to receive the locale for this user. Defaults to `false`",
                         "in": "query",
                         "name": "include_locale",
                         "type": "boolean"
                     },
                     {
                         "description": "Authentication token. Requires scope: `users:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "User to get info on",
                         "in": "query",
                         "name": "user",
                         "type": "string"
                     }
                 ],
                 "produces": [
@@ -21470,28 +21476,26 @@
                 "externalDocs": {
                     "description": "API method documentation",
                     "url": "https://api.slack.com/methods/users.lookupByEmail"
                 },
                 "operationId": "users_lookupByEmail",
                 "parameters": [
                     {
                         "description": "An email address belonging to a user in the workspace",
                         "in": "query",
                         "name": "email",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `users:read.email`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -21586,21 +21590,20 @@
                     {
                         "description": "Include labels for each ID in custom profile fields",
                         "in": "query",
                         "name": "include_labels",
                         "type": "boolean"
                     },
                     {
                         "description": "Authentication token. Requires scope: `users.profile:read`",
                         "in": "query",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "User to retrieve profile info for",
                         "in": "query",
                         "name": "user",
                         "type": "string"
                     }
                 ],
                 "produces": [
@@ -21711,21 +21714,20 @@
                     {
                         "description": "Collection of key:value pairs presented as a URL-encoded JSON hash. At most 50 fields may be set. Each field name is limited to 255 characters.",
                         "in": "formData",
                         "name": "profile",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `users.profile:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "ID of user to change. This argument may only be specified by team admins on paid teams.",
                         "in": "formData",
                         "name": "user",
                         "type": "string"
                     },
                     {
                         "description": "Value to set a single key to. Usable only if `profile` is not passed.",
@@ -21843,21 +21845,20 @@
                 "externalDocs": {
                     "description": "API method documentation",
                     "url": "https://api.slack.com/methods/users.setActive"
                 },
                 "operationId": "users_setActive",
                 "parameters": [
                     {
                         "description": "Authentication token. Requires scope: `users:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -21966,21 +21967,20 @@
                     {
                         "description": "File contents via `multipart/form-data`.",
                         "in": "formData",
                         "name": "image",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `users.profile:write`",
                         "in": "formData",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -22144,21 +22144,20 @@
                         "description": "Either `auto` or `away`",
                         "in": "formData",
                         "name": "presence",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `users:write`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     }
                 ],
                 "produces": [
                     "application/json"
                 ],
                 "responses": {
                     "200": {
                         "description": "Typical success response",
                         "schema": {
@@ -22245,21 +22244,20 @@
                 "externalDocs": {
                     "description": "API method documentation",
                     "url": "https://api.slack.com/methods/views.open"
                 },
                 "operationId": "views_open",
                 "parameters": [
                     {
                         "description": "Authentication token. Requires scope: `none`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Exchange a trigger to post to the user.",
                         "in": "query",
                         "name": "trigger_id",
                         "required": true,
                         "type": "string"
                     },
                     {
@@ -22337,21 +22335,20 @@
                     {
                         "description": "A string that represents view state to protect against possible race conditions.",
                         "in": "query",
                         "name": "hash",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `none`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "`id` of the user you want publish a view to.",
                         "in": "query",
                         "name": "user_id",
                         "required": true,
                         "type": "string"
                     },
                     {
@@ -22423,21 +22420,20 @@
                 "externalDocs": {
                     "description": "API method documentation",
                     "url": "https://api.slack.com/methods/views.push"
                 },
                 "operationId": "views_push",
                 "parameters": [
                     {
                         "description": "Authentication token. Requires scope: `none`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Exchange a trigger to post to the user.",
                         "in": "query",
                         "name": "trigger_id",
                         "required": true,
                         "type": "string"
                     },
                     {
@@ -22521,21 +22517,20 @@
                     {
                         "description": "A string that represents view state to protect against possible race conditions.",
                         "in": "query",
                         "name": "hash",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `none`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "A [view object](/reference/surfaces/views). This must be a JSON-encoded string.",
                         "in": "query",
                         "name": "view",
                         "type": "string"
                     },
                     {
                         "description": "A unique identifier of the view to be updated. Either `view_id` or `external_id` is required.",
@@ -22611,21 +22606,20 @@
                     {
                         "description": "Key-value object of outputs from your step. Keys of this object reflect the configured `key` properties of your [`outputs`](/reference/workflows/workflow_step#output) array from your `workflow_step` object.",
                         "in": "query",
                         "name": "outputs",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `workflow.steps:execute`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Context identifier that maps to the correct workflow step execution.",
                         "in": "query",
                         "name": "workflow_step_execute_id",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -22697,21 +22691,20 @@
                         "description": "A JSON-based object with a `message` property that should contain a human readable error message.",
                         "in": "query",
                         "name": "error",
                         "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `workflow.steps:execute`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "Context identifier that maps to the correct workflow step execution.",
                         "in": "query",
                         "name": "workflow_step_execute_id",
                         "required": true,
                         "type": "string"
                     }
                 ],
@@ -22800,21 +22793,20 @@
                     {
                         "description": "An optional field that can be used to override the step name that is shown in the Workflow Builder.",
                         "in": "query",
                         "name": "step_name",
                         "type": "string"
                     },
                     {
                         "description": "Authentication token. Requires scope: `workflow.steps:execute`",
                         "in": "header",
                         "name": "token",
-                        "required": true,
                         "type": "string"
                     },
                     {
                         "description": "A context identifier provided with `view_submission` payloads used to call back to `workflows.updateStep`.",
                         "in": "query",
                         "name": "workflow_step_edit_id",
                         "required": true,
                         "type": "string"
                     }
                 ],
